#!/usr/bin/python3
#
#	flightpanel - A Cortex-M4 based USB flight panel for flight simulators.
#	Copyright (C) 2017-2017 Johannes Bauer
#
#	This file is part of flightpanel.
#
#	flightpanel is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	flightpanel is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with flightpanel; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import sys
import re

digit_start_re = re.compile("^(\d+)(.*)")
space_lowercase_re = re.compile(" ([a-z])")

def to_enum(text):
	text = text.replace("è", "e")
	text = text.replace("é", "e")
	text = space_lowercase_re.sub(lambda x: x.group(1).upper(), text)
	text = text.replace(" ", "")
	text = text.replace("/", "_")
	text = text.replace("!", "Excl")
	text = text.replace("@", "AtSign")
	text = text.replace("$", "Dollar")
	text = text.replace("%", "Percent")
	text = text.replace("^", "Circumflex")
	text = text.replace("&", "Ampersand")
	text = text.replace("*", "Asterisk")
	text = text.replace("(", "OpenBracket")
	text = text.replace(")", "CloseBracket")
	text = text.replace("+", "Plus")
	text = text.replace("-", "Minus")
	text = text.replace("=", "Equals")
	text = text.replace("#", "Hash")
	text = text.replace("[", "OpenSquareBracket")
	text = text.replace("]", "CloseSquareBracket")
	text = text.replace("{", "OpenCurlyBracket")
	text = text.replace("}", "CloseCurlyBracket")
	text = text.replace("\\", "Backslash")
	text = text.replace("|", "Pipe")
	text = text.replace(";", "Semicolon")
	text = text.replace(":", "Colon")
	text = text.replace("'", "Apostrophe")
	text = text.replace("\"", "QuotationMarks")
	text = text.replace(",", "Comma")
	text = text.replace("<", "LeftChevron")
	text = text.replace(".", "Period")
	text = text.replace(">", "RightChevron")
	text = text.replace("?", "QuestionMark")
	text = text.replace("~", "Tilde")
	text = digit_start_re.sub(r"\2\1", text)
	return text

def parse(filename):
	with open(filename, encoding = "latin1") as f:
		for	(lineno, line) in enumerate(f, 1):
			line = line.rstrip("\r\n\t ")
			if lineno == 1:
				print("class %s(enum.IntEnum):" % (to_enum(line)))
			elif lineno >= 3:
				(itm_id, text) = line.split(maxsplit = 1)
				try:
					itm_id = int(itm_id, 16)
					enum_text = to_enum(text)
					print("	%s = 0x%x" % (enum_text, itm_id))				
				except ValueError:
					print("	# %s: %s" % (itm_id, text))
	print()

print("import enum")
for filename in sys.argv[1:]:
	parse(filename)
