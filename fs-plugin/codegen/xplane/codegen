#!/usr/bin/python3
#
#	flightpanel - A Cortex-M4 based USB flight panel for flight simulators.
#	Copyright (C) 2017-2017 Johannes Bauer
#
#	This file is part of flightpanel.
#
#	flightpanel is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	flightpanel is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with flightpanel; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import collections
import mako.lookup
import re

DataDef = collections.namedtuple("DataDef", [ "def_id", "datatype", "settable", "unit", "description", "symbol" ])

def read_datadefs(filename):
	datadefs = [ ]
	split_re = re.compile("\t+")
	with open(filename) as f:
		for line in f:
			line = line.rstrip("\r\n")
			line = split_re.split(line)
			if len(line) >= 5:
				def_id = line[0]
				datatype = line[1]
				settable = line[2] == "y"
				unit = line[3]
				description = line[4]
				symbol = def_id.replace("/", "_")
				datadef = DataDef(def_id = def_id, datatype = datatype, settable = settable, unit = unit, description = description, symbol = symbol)
				datadefs.append(datadef)
	return datadefs

datadefs = read_datadefs("used_datadefs.txt")
lookup = mako.lookup.TemplateLookup([ "." ], strict_undefined = True)
with open("../xplane-datadefs.cpp", "w") as f:
	f.write(lookup.get_template("template_datadefs.cpp").render(datadefs = datadefs))
with open("../xplane-datadefs.hpp", "w") as f:
	f.write(lookup.get_template("template_datadefs.hpp").render(datadefs = datadefs))
