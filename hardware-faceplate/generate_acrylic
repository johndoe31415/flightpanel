#!/usr/bin/python3
#
#	flightpanel - A Cortex-M4 based USB flight panel for flight simulators.
#	Copyright (C) 2017-2017 Johannes Bauer
#
#	This file is part of flightpanel.
#
#	flightpanel is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	flightpanel is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with flightpanel; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import os
import collections
hole_width_mm = 29.4
hole_height_mm = 12.3
hole_cradius_mm = 1
base_depth_mm = 2


count_x = 3
count_y = 4

x_distance = abs(17.68 - 51.56)
inbetween_spacing = 0
#acryl_spacing_mm = 1.5
acryl_clearance_mm = 0.25
inner_width_mm = hole_width_mm - (2 * acryl_clearance_mm)
inner_height_mm = hole_height_mm - (2 * acryl_clearance_mm)
acryl_spacing_mm = (x_distance - inner_width_mm) / 2
outer_width_mm = 2 * acryl_spacing_mm + inner_width_mm
outer_height_mm = 2 * acryl_spacing_mm + inner_height_mm
total_width_mm = count_x * outer_width_mm + ((count_x - 1) * inbetween_spacing)
total_height_mm = count_y * outer_height_mm + ((count_y - 1) * inbetween_spacing)
acryl_depth_mm = 3

class ComponentNames(object):
	def __init__(self):
		self._ids = collections.defaultdict(int)
	
	def get(self, name):
		self._ids[name] += 1
		return name + "_" + str(self._ids[name])


with open(os.path.expanduser("~/.FrontDesign/Scripts/acrylic.fpjs"), "w") as f:
	print("var fp = new Frontpanel(\"acrylic\", thick_3mm, %f, %f, acryl, acryl_clear);" % (total_width_mm, total_height_mm), file = f)
	print("AddFrontpanel(fp);", file = f)
	print(file = f)

	cnames = ComponentNames()
	for y in range(count_y):
		for x in range(count_x):
			posx = (x * (outer_width_mm + inbetween_spacing)) + outer_width_mm / 2
			posy = (y * (outer_height_mm + inbetween_spacing)) + outer_height_mm / 2
			name = cnames.get("cav")
			print("var %s = new Cavity(\"%s\");" % (name, name), file = f)
			print("%s.MakeRectInRect(%f, %f, %f, %f, %f, %f, %f).SetTool(cutter_1_0mm);" % (name, outer_width_mm, outer_height_mm, base_depth_mm, inner_width_mm, inner_height_mm, hole_cradius_mm, hole_cradius_mm), file = f)
			print("fp.AddElement(%s, %f, %f);" % (name, posx, posy), file = f)
			print(file = f)
