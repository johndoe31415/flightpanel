#!/usr/bin/python3
#
#	flightpanel - A Cortex-M4 based USB flight panel for flight simulators.
#	Copyright (C) 2017-2017 Johannes Bauer
#
#	This file is part of flightpanel.
#
#	flightpanel is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	flightpanel is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with flightpanel; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

from PnmPicture import PnmPicture
import sys

if len(sys.argv) == 5:
	width = int(sys.argv[1])
	height = int(sys.argv[2])
	data = sys.argv[3]
	pnm_filename = sys.argv[4]
	data = data.replace("0x", "").replace(",", "")
	data = bytes.fromhex(data)

	pnm = PnmPicture.new(width, height)
	rowwidth = (width + 7) // 8
	for y in range(height):
		for x in range(width):
			byte_offset = (x // 8) + (y * rowwidth)
			bit_offset = x % 8
			pixel = ((data[byte_offset] >> bit_offset) & 1) != 0
			if pixel:
				pnm.set_pixel(x, y, (0, 0, 0))
	pnm.write_file(pnm_filename)
elif len(sys.argv) == 2:
	pnm_filename = sys.argv[1]
	pic = PnmPicture.read_file(pnm_filename)

	rowwidth = (pic.width + 7) // 8
	data = bytearray(rowwidth * pic.height)
	for y in range(pic.height):
		for x in range(pic.width):
			if pic.get_pixel(x, y) != (255, 255, 255):
				byte_offset = (x // 8) + (y * rowwidth)
				bit_offset = x % 8
				data[byte_offset] |= (1 << bit_offset)

	print(", ".join("0x%02x" % (c) for c in data))
else:
	print("%s [width] [height] [hexdata] [outfile]" % (sys.argv[0]))
	print("%s [pnm-filename]" % (sys.argv[0]))
	print("You need to specify either one or four parameters.")
	sys.exit(1)




